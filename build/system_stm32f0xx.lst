ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/system_stm32f0xx.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB40:
   1:Src/system_stm32f0xx.c **** /**
   2:Src/system_stm32f0xx.c ****   ******************************************************************************
   3:Src/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:Src/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f0xx.c ****   *
   7:Src/system_stm32f0xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:Src/system_stm32f0xx.c ****   *    user application:
   9:Src/system_stm32f0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  12:Src/system_stm32f0xx.c ****   *
  13:Src/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f0xx.c ****   *
  17:Src/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f0xx.c ****   *                                 during program execution.
  20:Src/system_stm32f0xx.c ****   *
  21:Src/system_stm32f0xx.c ****   *
  22:Src/system_stm32f0xx.c ****   ******************************************************************************
  23:Src/system_stm32f0xx.c ****   * @attention
  24:Src/system_stm32f0xx.c ****   *
  25:Src/system_stm32f0xx.c ****   * Copyright (c) 2016 STMicroelectronics.
  26:Src/system_stm32f0xx.c ****   * All rights reserved.
  27:Src/system_stm32f0xx.c ****   *
  28:Src/system_stm32f0xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Src/system_stm32f0xx.c ****   * in the root directory of this software component.
  30:Src/system_stm32f0xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Src/system_stm32f0xx.c ****   *
  32:Src/system_stm32f0xx.c ****   ******************************************************************************
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 2


  33:Src/system_stm32f0xx.c ****   */
  34:Src/system_stm32f0xx.c **** /** @addtogroup CMSIS
  35:Src/system_stm32f0xx.c ****   * @{
  36:Src/system_stm32f0xx.c ****   */
  37:Src/system_stm32f0xx.c **** 
  38:Src/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  39:Src/system_stm32f0xx.c ****   * @{
  40:Src/system_stm32f0xx.c ****   */
  41:Src/system_stm32f0xx.c **** 
  42:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  43:Src/system_stm32f0xx.c ****   * @{
  44:Src/system_stm32f0xx.c ****   */
  45:Src/system_stm32f0xx.c **** 
  46:Src/system_stm32f0xx.c **** #include "stm32f0xx.h"
  47:Src/system_stm32f0xx.c **** #include <string.h>
  48:Src/system_stm32f0xx.c **** 
  49:Src/system_stm32f0xx.c **** /**
  50:Src/system_stm32f0xx.c ****   * @}
  51:Src/system_stm32f0xx.c ****   */
  52:Src/system_stm32f0xx.c **** 
  53:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
  54:Src/system_stm32f0xx.c ****   * @{
  55:Src/system_stm32f0xx.c ****   */
  56:Src/system_stm32f0xx.c **** 
  57:Src/system_stm32f0xx.c **** /**
  58:Src/system_stm32f0xx.c ****   * @}
  59:Src/system_stm32f0xx.c ****   */
  60:Src/system_stm32f0xx.c **** 
  61:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
  62:Src/system_stm32f0xx.c ****   * @{
  63:Src/system_stm32f0xx.c ****   */
  64:Src/system_stm32f0xx.c **** #if !defined  (HSE_VALUE) 
  65:Src/system_stm32f0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
  66:Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  67:Src/system_stm32f0xx.c **** #endif /* HSE_VALUE */
  68:Src/system_stm32f0xx.c **** 
  69:Src/system_stm32f0xx.c **** #if !defined  (HSI_VALUE)
  70:Src/system_stm32f0xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  71:Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  72:Src/system_stm32f0xx.c **** #endif /* HSI_VALUE */
  73:Src/system_stm32f0xx.c **** 
  74:Src/system_stm32f0xx.c **** #if !defined (HSI48_VALUE)
  75:Src/system_stm32f0xx.c **** #define HSI48_VALUE    ((uint32_t)48000000) /*!< Default value of the HSI48 Internal oscillator in 
  76:Src/system_stm32f0xx.c ****                                                  This value can be provided and adapted by the user
  77:Src/system_stm32f0xx.c **** #endif /* HSI48_VALUE */
  78:Src/system_stm32f0xx.c **** /**
  79:Src/system_stm32f0xx.c ****   * @}
  80:Src/system_stm32f0xx.c ****   */
  81:Src/system_stm32f0xx.c **** 
  82:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
  83:Src/system_stm32f0xx.c ****   * @{
  84:Src/system_stm32f0xx.c ****   */
  85:Src/system_stm32f0xx.c **** 
  86:Src/system_stm32f0xx.c **** /**
  87:Src/system_stm32f0xx.c ****   * @}
  88:Src/system_stm32f0xx.c ****   */
  89:Src/system_stm32f0xx.c **** 
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 3


  90:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
  91:Src/system_stm32f0xx.c ****   * @{
  92:Src/system_stm32f0xx.c ****   */
  93:Src/system_stm32f0xx.c ****   /* This variable is updated in three ways:
  94:Src/system_stm32f0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
  95:Src/system_stm32f0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
  96:Src/system_stm32f0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
  97:Src/system_stm32f0xx.c ****          Note: If you use this function to configure the system clock; then there
  98:Src/system_stm32f0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
  99:Src/system_stm32f0xx.c ****                variable is updated automatically.
 100:Src/system_stm32f0xx.c ****   */
 101:Src/system_stm32f0xx.c **** uint32_t SystemCoreClock = 8000000;
 102:Src/system_stm32f0xx.c **** 
 103:Src/system_stm32f0xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 104:Src/system_stm32f0xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 105:Src/system_stm32f0xx.c **** 
 106:Src/system_stm32f0xx.c **** extern char ram_isr_vector;
 107:Src/system_stm32f0xx.c **** extern char ram_isr_vector_end;
 108:Src/system_stm32f0xx.c **** extern char g_pfnVectors[];
 109:Src/system_stm32f0xx.c **** 
 110:Src/system_stm32f0xx.c **** /**
 111:Src/system_stm32f0xx.c ****   * @}
 112:Src/system_stm32f0xx.c ****   */
 113:Src/system_stm32f0xx.c **** 
 114:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 115:Src/system_stm32f0xx.c ****   * @{
 116:Src/system_stm32f0xx.c ****   */
 117:Src/system_stm32f0xx.c **** 
 118:Src/system_stm32f0xx.c **** /**
 119:Src/system_stm32f0xx.c ****   * @}
 120:Src/system_stm32f0xx.c ****   */
 121:Src/system_stm32f0xx.c **** 
 122:Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 123:Src/system_stm32f0xx.c ****   * @{
 124:Src/system_stm32f0xx.c ****   */
 125:Src/system_stm32f0xx.c **** 
 126:Src/system_stm32f0xx.c **** /**
 127:Src/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system
 128:Src/system_stm32f0xx.c ****   * @param  None
 129:Src/system_stm32f0xx.c ****   * @retval None
 130:Src/system_stm32f0xx.c ****   */
 131:Src/system_stm32f0xx.c **** void SystemInit(void)
 132:Src/system_stm32f0xx.c **** {
  27              		.loc 1 132 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 133:Src/system_stm32f0xx.c ****   // Copy ISR into beginning of RAM
 134:Src/system_stm32f0xx.c ****   memcpy(&ram_isr_vector, g_pfnVectors, &ram_isr_vector_end - &ram_isr_vector);
  36              		.loc 1 134 3 view .LVU1
  37              		.loc 1 134 61 is_stmt 0 view .LVU2
  38 0002 064A     		ldr	r2, .L2
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 4


  39 0004 0648     		ldr	r0, .L2+4
  40 0006 121A     		subs	r2, r2, r0
  41              		.loc 1 134 3 view .LVU3
  42 0008 0649     		ldr	r1, .L2+8
  43 000a FFF7FEFF 		bl	memcpy
  44              	.LVL0:
 135:Src/system_stm32f0xx.c **** 
 136:Src/system_stm32f0xx.c ****   // Remap RAM to 0x0000_0000
 137:Src/system_stm32f0xx.c ****   uint32_t tmp = SYSCFG->CFGR1;
  45              		.loc 1 137 3 is_stmt 1 view .LVU4
  46              		.loc 1 137 12 is_stmt 0 view .LVU5
  47 000e 064A     		ldr	r2, .L2+12
  48 0010 1368     		ldr	r3, [r2]
  49              	.LVL1:
 138:Src/system_stm32f0xx.c ****   tmp &= ~(SYSCFG_CFGR1_MEM_MODE_Msk);
  50              		.loc 1 138 3 is_stmt 1 view .LVU6
  51              		.loc 1 138 7 is_stmt 0 view .LVU7
  52 0012 0321     		movs	r1, #3
  53 0014 8B43     		bics	r3, r1
  54              	.LVL2:
 139:Src/system_stm32f0xx.c ****   tmp |= 0x3 << SYSCFG_CFGR1_MEM_MODE_Pos;
  55              		.loc 1 139 3 is_stmt 1 view .LVU8
  56              		.loc 1 139 7 is_stmt 0 view .LVU9
  57 0016 0B43     		orrs	r3, r1
  58              	.LVL3:
 140:Src/system_stm32f0xx.c ****   SYSCFG->CFGR1 = tmp;
  59              		.loc 1 140 3 is_stmt 1 view .LVU10
  60              		.loc 1 140 17 is_stmt 0 view .LVU11
  61 0018 1360     		str	r3, [r2]
 141:Src/system_stm32f0xx.c **** }
  62              		.loc 1 141 1 view .LVU12
  63              		@ sp needed
  64 001a 10BD     		pop	{r4, pc}
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 001c 00000000 		.word	ram_isr_vector_end
  69 0020 00000000 		.word	ram_isr_vector
  70 0024 00000000 		.word	g_pfnVectors
  71 0028 00000140 		.word	1073807360
  72              		.cfi_endproc
  73              	.LFE40:
  75              		.global	__aeabi_uidiv
  76              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  77              		.align	1
  78              		.global	SystemCoreClockUpdate
  79              		.syntax unified
  80              		.code	16
  81              		.thumb_func
  83              	SystemCoreClockUpdate:
  84              	.LFB41:
 142:Src/system_stm32f0xx.c **** 
 143:Src/system_stm32f0xx.c **** /**
 144:Src/system_stm32f0xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 145:Src/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 146:Src/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 147:Src/system_stm32f0xx.c ****   *         other parameters.
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 5


 148:Src/system_stm32f0xx.c ****   *
 149:Src/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 150:Src/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 151:Src/system_stm32f0xx.c ****   *         based on this variable will be incorrect.
 152:Src/system_stm32f0xx.c ****   *
 153:Src/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real
 154:Src/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 155:Src/system_stm32f0xx.c ****   *           constant and the selected clock source:
 156:Src/system_stm32f0xx.c ****   *
 157:Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 158:Src/system_stm32f0xx.c ****   *
 159:Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 160:Src/system_stm32f0xx.c ****   *
 161:Src/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 162:Src/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 163:Src/system_stm32f0xx.c ****   *
 164:Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI48, SystemCoreClock will contain the HSI48_VALUE(***)
 165:Src/system_stm32f0xx.c ****   *
 166:Src/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
 167:Src/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 168:Src/system_stm32f0xx.c ****   *             in voltage and temperature.
 169:Src/system_stm32f0xx.c ****   *
 170:Src/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (its value
 171:Src/system_stm32f0xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 172:Src/system_stm32f0xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 173:Src/system_stm32f0xx.c ****   *              may have wrong result.
 174:Src/system_stm32f0xx.c ****   *
 175:Src/system_stm32f0xx.c ****   *         (***) HSI48_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
 176:Src/system_stm32f0xx.c ****   *             48 MHz) but the real value may vary depending on the variations
 177:Src/system_stm32f0xx.c ****   *             in voltage and temperature.
 178:Src/system_stm32f0xx.c ****   *
 179:Src/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 180:Src/system_stm32f0xx.c ****   *           value for HSE crystal.
 181:Src/system_stm32f0xx.c ****   *
 182:Src/system_stm32f0xx.c ****   * @param  None
 183:Src/system_stm32f0xx.c ****   * @retval None
 184:Src/system_stm32f0xx.c ****   */
 185:Src/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 186:Src/system_stm32f0xx.c **** {
  85              		.loc 1 186 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89 0000 10B5     		push	{r4, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
 187:Src/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
  94              		.loc 1 187 3 view .LVU14
  95              	.LVL4:
 188:Src/system_stm32f0xx.c **** 
 189:Src/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 190:Src/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  96              		.loc 1 190 3 view .LVU15
  97              		.loc 1 190 12 is_stmt 0 view .LVU16
  98 0002 254B     		ldr	r3, .L14
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 6


  99 0004 5A68     		ldr	r2, [r3, #4]
 100              		.loc 1 190 7 view .LVU17
 101 0006 0C23     		movs	r3, #12
 102 0008 1340     		ands	r3, r2
 103              	.LVL5:
 191:Src/system_stm32f0xx.c **** 
 192:Src/system_stm32f0xx.c ****   switch (tmp)
 104              		.loc 1 192 3 is_stmt 1 view .LVU18
 105 000a 042B     		cmp	r3, #4
 106 000c 16D0     		beq	.L5
 107 000e 082B     		cmp	r3, #8
 108 0010 18D0     		beq	.L6
 109 0012 002B     		cmp	r3, #0
 110 0014 03D0     		beq	.L11
 193:Src/system_stm32f0xx.c ****   {
 194:Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 195:Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 196:Src/system_stm32f0xx.c ****       break;
 197:Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 198:Src/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 199:Src/system_stm32f0xx.c ****       break;
 200:Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 201:Src/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 202:Src/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 203:Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 204:Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 205:Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 206:Src/system_stm32f0xx.c **** 
 207:Src/system_stm32f0xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 208:Src/system_stm32f0xx.c ****       {
 209:Src/system_stm32f0xx.c ****         /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
 210:Src/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
 211:Src/system_stm32f0xx.c ****       }
 212:Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F071xB) || defined(STM32F072xB) ||
 213:Src/system_stm32f0xx.c ****       else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
 214:Src/system_stm32f0xx.c ****       {
 215:Src/system_stm32f0xx.c ****         /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
 216:Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
 217:Src/system_stm32f0xx.c ****       }
 218:Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F071xB || STM32F072xB || STM32F078xx || STM32F091xC ||
 219:Src/system_stm32f0xx.c ****       else
 220:Src/system_stm32f0xx.c ****       {
 221:Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
 222:Src/system_stm32f0xx.c ****  || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
 223:Src/system_stm32f0xx.c ****  || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
 224:Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
 225:Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
 226:Src/system_stm32f0xx.c **** #else
 227:Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
 228:Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 229:Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 230:Src/system_stm32f0xx.c ****           STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
 231:Src/system_stm32f0xx.c ****           STM32F091xC || STM32F098xx || STM32F030xC */
 232:Src/system_stm32f0xx.c **** 	  }
 233:Src/system_stm32f0xx.c ****       break;
 234:Src/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 235:Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 7


 111              		.loc 1 235 7 view .LVU19
 112              		.loc 1 235 23 is_stmt 0 view .LVU20
 113 0016 214B     		ldr	r3, .L14+4
 114              	.LVL6:
 115              		.loc 1 235 23 view .LVU21
 116 0018 214A     		ldr	r2, .L14+8
 117              	.LVL7:
 118              		.loc 1 235 23 view .LVU22
 119 001a 1A60     		str	r2, [r3]
 236:Src/system_stm32f0xx.c ****       break;
 120              		.loc 1 236 7 is_stmt 1 view .LVU23
 121 001c 02E0     		b	.L8
 122              	.LVL8:
 123              	.L11:
 195:Src/system_stm32f0xx.c ****       break;
 124              		.loc 1 195 7 view .LVU24
 195:Src/system_stm32f0xx.c ****       break;
 125              		.loc 1 195 23 is_stmt 0 view .LVU25
 126 001e 1F4B     		ldr	r3, .L14+4
 127              	.LVL9:
 195:Src/system_stm32f0xx.c ****       break;
 128              		.loc 1 195 23 view .LVU26
 129 0020 1F4A     		ldr	r2, .L14+8
 130              	.LVL10:
 195:Src/system_stm32f0xx.c ****       break;
 131              		.loc 1 195 23 view .LVU27
 132 0022 1A60     		str	r2, [r3]
 196:Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 133              		.loc 1 196 7 is_stmt 1 view .LVU28
 134              	.LVL11:
 135              	.L8:
 237:Src/system_stm32f0xx.c ****   }
 238:Src/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 239:Src/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 240:Src/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 136              		.loc 1 240 3 view .LVU29
 137              		.loc 1 240 28 is_stmt 0 view .LVU30
 138 0024 1C4B     		ldr	r3, .L14
 139 0026 5A68     		ldr	r2, [r3, #4]
 140              		.loc 1 240 52 view .LVU31
 141 0028 1209     		lsrs	r2, r2, #4
 142 002a 0F23     		movs	r3, #15
 143 002c 1340     		ands	r3, r2
 144              		.loc 1 240 22 view .LVU32
 145 002e 1D4A     		ldr	r2, .L14+12
 146 0030 D15C     		ldrb	r1, [r2, r3]
 147              	.LVL12:
 241:Src/system_stm32f0xx.c ****   /* HCLK clock frequency */
 242:Src/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;
 148              		.loc 1 242 3 is_stmt 1 view .LVU33
 149              		.loc 1 242 19 is_stmt 0 view .LVU34
 150 0032 1A4A     		ldr	r2, .L14+4
 151 0034 1368     		ldr	r3, [r2]
 152 0036 CB40     		lsrs	r3, r3, r1
 153 0038 1360     		str	r3, [r2]
 243:Src/system_stm32f0xx.c **** }
 154              		.loc 1 243 1 view .LVU35
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 8


 155              		@ sp needed
 156 003a 10BD     		pop	{r4, pc}
 157              	.LVL13:
 158              	.L5:
 198:Src/system_stm32f0xx.c ****       break;
 159              		.loc 1 198 7 is_stmt 1 view .LVU36
 198:Src/system_stm32f0xx.c ****       break;
 160              		.loc 1 198 23 is_stmt 0 view .LVU37
 161 003c 174B     		ldr	r3, .L14+4
 162              	.LVL14:
 198:Src/system_stm32f0xx.c ****       break;
 163              		.loc 1 198 23 view .LVU38
 164 003e 184A     		ldr	r2, .L14+8
 165              	.LVL15:
 198:Src/system_stm32f0xx.c ****       break;
 166              		.loc 1 198 23 view .LVU39
 167 0040 1A60     		str	r2, [r3]
 199:Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 168              		.loc 1 199 7 is_stmt 1 view .LVU40
 169 0042 EFE7     		b	.L8
 170              	.LVL16:
 171              	.L6:
 202:Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 172              		.loc 1 202 7 view .LVU41
 202:Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 173              		.loc 1 202 20 is_stmt 0 view .LVU42
 174 0044 144A     		ldr	r2, .L14
 175 0046 5068     		ldr	r0, [r2, #4]
 176              	.LVL17:
 203:Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 177              		.loc 1 203 7 is_stmt 1 view .LVU43
 203:Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 178              		.loc 1 203 22 is_stmt 0 view .LVU44
 179 0048 5368     		ldr	r3, [r2, #4]
 180              	.LVL18:
 203:Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 181              		.loc 1 203 17 view .LVU45
 182 004a C021     		movs	r1, #192
 183 004c 4902     		lsls	r1, r1, #9
 184 004e 0B40     		ands	r3, r1
 185              	.LVL19:
 204:Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 186              		.loc 1 204 7 is_stmt 1 view .LVU46
 204:Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 187              		.loc 1 204 27 is_stmt 0 view .LVU47
 188 0050 800C     		lsrs	r0, r0, #18
 189              	.LVL20:
 204:Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 190              		.loc 1 204 27 view .LVU48
 191 0052 0F21     		movs	r1, #15
 192 0054 0840     		ands	r0, r1
 204:Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 193              		.loc 1 204 15 view .LVU49
 194 0056 841C     		adds	r4, r0, #2
 195              	.LVL21:
 205:Src/system_stm32f0xx.c **** 
 196              		.loc 1 205 7 is_stmt 1 view .LVU50
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 9


 205:Src/system_stm32f0xx.c **** 
 197              		.loc 1 205 26 is_stmt 0 view .LVU51
 198 0058 D26A     		ldr	r2, [r2, #44]
 205:Src/system_stm32f0xx.c **** 
 199              		.loc 1 205 34 view .LVU52
 200 005a 1140     		ands	r1, r2
 205:Src/system_stm32f0xx.c **** 
 201              		.loc 1 205 20 view .LVU53
 202 005c 0131     		adds	r1, r1, #1
 203              	.LVL22:
 207:Src/system_stm32f0xx.c ****       {
 204              		.loc 1 207 7 is_stmt 1 view .LVU54
 207:Src/system_stm32f0xx.c ****       {
 205              		.loc 1 207 10 is_stmt 0 view .LVU55
 206 005e 8022     		movs	r2, #128
 207 0060 5202     		lsls	r2, r2, #9
 208 0062 9342     		cmp	r3, r2
 209 0064 0AD0     		beq	.L12
 213:Src/system_stm32f0xx.c ****       {
 210              		.loc 1 213 12 is_stmt 1 view .LVU56
 213:Src/system_stm32f0xx.c ****       {
 211              		.loc 1 213 15 is_stmt 0 view .LVU57
 212 0066 C022     		movs	r2, #192
 213 0068 5202     		lsls	r2, r2, #9
 214 006a 9342     		cmp	r3, r2
 215 006c 0DD0     		beq	.L13
 225:Src/system_stm32f0xx.c **** #else
 216              		.loc 1 225 9 is_stmt 1 view .LVU58
 225:Src/system_stm32f0xx.c **** #else
 217              		.loc 1 225 37 is_stmt 0 view .LVU59
 218 006e 0C48     		ldr	r0, .L14+8
 219 0070 FFF7FEFF 		bl	__aeabi_uidiv
 220              	.LVL23:
 225:Src/system_stm32f0xx.c **** #else
 221              		.loc 1 225 52 view .LVU60
 222 0074 6043     		muls	r0, r4
 225:Src/system_stm32f0xx.c **** #else
 223              		.loc 1 225 25 view .LVU61
 224 0076 094B     		ldr	r3, .L14+4
 225 0078 1860     		str	r0, [r3]
 226 007a D3E7     		b	.L8
 227              	.LVL24:
 228              	.L12:
 210:Src/system_stm32f0xx.c ****       }
 229              		.loc 1 210 9 is_stmt 1 view .LVU62
 210:Src/system_stm32f0xx.c ****       }
 230              		.loc 1 210 37 is_stmt 0 view .LVU63
 231 007c 0848     		ldr	r0, .L14+8
 232 007e FFF7FEFF 		bl	__aeabi_uidiv
 233              	.LVL25:
 210:Src/system_stm32f0xx.c ****       }
 234              		.loc 1 210 52 view .LVU64
 235 0082 6043     		muls	r0, r4
 210:Src/system_stm32f0xx.c ****       }
 236              		.loc 1 210 25 view .LVU65
 237 0084 054B     		ldr	r3, .L14+4
 238 0086 1860     		str	r0, [r3]
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 10


 239 0088 CCE7     		b	.L8
 240              	.LVL26:
 241              	.L13:
 216:Src/system_stm32f0xx.c ****       }
 242              		.loc 1 216 9 is_stmt 1 view .LVU66
 216:Src/system_stm32f0xx.c ****       }
 243              		.loc 1 216 39 is_stmt 0 view .LVU67
 244 008a 0748     		ldr	r0, .L14+16
 245 008c FFF7FEFF 		bl	__aeabi_uidiv
 246              	.LVL27:
 216:Src/system_stm32f0xx.c ****       }
 247              		.loc 1 216 54 view .LVU68
 248 0090 6043     		muls	r0, r4
 216:Src/system_stm32f0xx.c ****       }
 249              		.loc 1 216 25 view .LVU69
 250 0092 024B     		ldr	r3, .L14+4
 251 0094 1860     		str	r0, [r3]
 252 0096 C5E7     		b	.L8
 253              	.L15:
 254              		.align	2
 255              	.L14:
 256 0098 00100240 		.word	1073876992
 257 009c 00000000 		.word	SystemCoreClock
 258 00a0 00127A00 		.word	8000000
 259 00a4 00000000 		.word	AHBPrescTable
 260 00a8 006CDC02 		.word	48000000
 261              		.cfi_endproc
 262              	.LFE41:
 264              		.global	APBPrescTable
 265              		.section	.rodata.APBPrescTable,"a"
 266              		.align	2
 269              	APBPrescTable:
 270 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 270      01020304 
 271              		.global	AHBPrescTable
 272              		.section	.rodata.AHBPrescTable,"a"
 273              		.align	2
 276              	AHBPrescTable:
 277 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 277      00000000 
 277      01020304 
 277      06
 278 000d 070809   		.ascii	"\007\010\011"
 279              		.global	SystemCoreClock
 280              		.section	.data.SystemCoreClock,"aw"
 281              		.align	2
 284              	SystemCoreClock:
 285 0000 00127A00 		.word	8000000
 286              		.text
 287              	.Letext0:
 288              		.file 2 "c:\\arm-gnu-toolchain-12.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\include\\mac
 289              		.file 3 "c:\\arm-gnu-toolchain-12.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\include\\sys
 290              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 291              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 292              		.file 6 "c:\\arm-gnu-toolchain-12.3.rel1-mingw-w64-i686-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\12
 293              		.file 7 "c:\\arm-gnu-toolchain-12.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\include\\str
 294              		.file 8 "<built-in>"
ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 11


ARM GAS  C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f0xx.c
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:19     .text.SystemInit:00000000 $t
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:68     .text.SystemInit:0000001c $d
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:77     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:83     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:256    .text.SystemCoreClockUpdate:00000098 $d
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:284    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:276    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:269    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:266    .rodata.APBPrescTable:00000000 $d
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:273    .rodata.AHBPrescTable:00000000 $d
C:\Users\kurt\AppData\Local\Temp\cca4xKY0.s:281    .data.SystemCoreClock:00000000 $d

UNDEFINED SYMBOLS
memcpy
ram_isr_vector_end
ram_isr_vector
g_pfnVectors
__aeabi_uidiv
